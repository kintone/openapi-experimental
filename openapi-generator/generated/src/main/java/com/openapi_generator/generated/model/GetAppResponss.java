/*
 * Kintone REST API
 * This is an experimental
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.openapi_generator.generated.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.openapi_generator.generated.model.GetAppResponssCreator;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.openapi_generator.generated.JSON;

/**
 * Get App Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-29T04:52:36.267360054Z[Etc/UTC]", comments = "Generator version: 7.11.0-SNAPSHOT")
public class GetAppResponss {
  public static final String SERIALIZED_NAME_APP_ID = "appId";
  @SerializedName(SERIALIZED_NAME_APP_ID)
  @javax.annotation.Nullable
  private String appId;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  @javax.annotation.Nullable
  private String code;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nullable
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_SPACE_ID = "spaceId";
  @SerializedName(SERIALIZED_NAME_SPACE_ID)
  @javax.annotation.Nullable
  private String spaceId;

  public static final String SERIALIZED_NAME_THREAD_ID = "threadId";
  @SerializedName(SERIALIZED_NAME_THREAD_ID)
  @javax.annotation.Nullable
  private String threadId;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  @javax.annotation.Nullable
  private String createdAt;

  public static final String SERIALIZED_NAME_CREATOR = "creator";
  @SerializedName(SERIALIZED_NAME_CREATOR)
  @javax.annotation.Nullable
  private GetAppResponssCreator creator;

  public static final String SERIALIZED_NAME_MODIFIED_AT = "modifiedAt";
  @SerializedName(SERIALIZED_NAME_MODIFIED_AT)
  @javax.annotation.Nullable
  private String modifiedAt;

  public static final String SERIALIZED_NAME_MODIFIER = "modifier";
  @SerializedName(SERIALIZED_NAME_MODIFIER)
  @javax.annotation.Nullable
  private GetAppResponssCreator modifier;

  public GetAppResponss() {
  }

  public GetAppResponss appId(@javax.annotation.Nullable String appId) {
    this.appId = appId;
    return this;
  }

  /**
   * Get appId
   * @return appId
   */
  @javax.annotation.Nullable
  public String getAppId() {
    return appId;
  }

  public void setAppId(@javax.annotation.Nullable String appId) {
    this.appId = appId;
  }


  public GetAppResponss code(@javax.annotation.Nullable String code) {
    this.code = code;
    return this;
  }

  /**
   * Get code
   * @return code
   */
  @javax.annotation.Nullable
  public String getCode() {
    return code;
  }

  public void setCode(@javax.annotation.Nullable String code) {
    this.code = code;
  }


  public GetAppResponss name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public GetAppResponss description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public GetAppResponss spaceId(@javax.annotation.Nullable String spaceId) {
    this.spaceId = spaceId;
    return this;
  }

  /**
   * Get spaceId
   * @return spaceId
   */
  @javax.annotation.Nullable
  public String getSpaceId() {
    return spaceId;
  }

  public void setSpaceId(@javax.annotation.Nullable String spaceId) {
    this.spaceId = spaceId;
  }


  public GetAppResponss threadId(@javax.annotation.Nullable String threadId) {
    this.threadId = threadId;
    return this;
  }

  /**
   * Get threadId
   * @return threadId
   */
  @javax.annotation.Nullable
  public String getThreadId() {
    return threadId;
  }

  public void setThreadId(@javax.annotation.Nullable String threadId) {
    this.threadId = threadId;
  }


  public GetAppResponss createdAt(@javax.annotation.Nullable String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(@javax.annotation.Nullable String createdAt) {
    this.createdAt = createdAt;
  }


  public GetAppResponss creator(@javax.annotation.Nullable GetAppResponssCreator creator) {
    this.creator = creator;
    return this;
  }

  /**
   * Get creator
   * @return creator
   */
  @javax.annotation.Nullable
  public GetAppResponssCreator getCreator() {
    return creator;
  }

  public void setCreator(@javax.annotation.Nullable GetAppResponssCreator creator) {
    this.creator = creator;
  }


  public GetAppResponss modifiedAt(@javax.annotation.Nullable String modifiedAt) {
    this.modifiedAt = modifiedAt;
    return this;
  }

  /**
   * Get modifiedAt
   * @return modifiedAt
   */
  @javax.annotation.Nullable
  public String getModifiedAt() {
    return modifiedAt;
  }

  public void setModifiedAt(@javax.annotation.Nullable String modifiedAt) {
    this.modifiedAt = modifiedAt;
  }


  public GetAppResponss modifier(@javax.annotation.Nullable GetAppResponssCreator modifier) {
    this.modifier = modifier;
    return this;
  }

  /**
   * Get modifier
   * @return modifier
   */
  @javax.annotation.Nullable
  public GetAppResponssCreator getModifier() {
    return modifier;
  }

  public void setModifier(@javax.annotation.Nullable GetAppResponssCreator modifier) {
    this.modifier = modifier;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetAppResponss getAppResponss = (GetAppResponss) o;
    return Objects.equals(this.appId, getAppResponss.appId) &&
        Objects.equals(this.code, getAppResponss.code) &&
        Objects.equals(this.name, getAppResponss.name) &&
        Objects.equals(this.description, getAppResponss.description) &&
        Objects.equals(this.spaceId, getAppResponss.spaceId) &&
        Objects.equals(this.threadId, getAppResponss.threadId) &&
        Objects.equals(this.createdAt, getAppResponss.createdAt) &&
        Objects.equals(this.creator, getAppResponss.creator) &&
        Objects.equals(this.modifiedAt, getAppResponss.modifiedAt) &&
        Objects.equals(this.modifier, getAppResponss.modifier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appId, code, name, description, spaceId, threadId, createdAt, creator, modifiedAt, modifier);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetAppResponss {\n");
    sb.append("    appId: ").append(toIndentedString(appId)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    spaceId: ").append(toIndentedString(spaceId)).append("\n");
    sb.append("    threadId: ").append(toIndentedString(threadId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    sb.append("    modifier: ").append(toIndentedString(modifier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("appId");
    openapiFields.add("code");
    openapiFields.add("name");
    openapiFields.add("description");
    openapiFields.add("spaceId");
    openapiFields.add("threadId");
    openapiFields.add("createdAt");
    openapiFields.add("creator");
    openapiFields.add("modifiedAt");
    openapiFields.add("modifier");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetAppResponss
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetAppResponss.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetAppResponss is not found in the empty JSON string", GetAppResponss.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetAppResponss.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetAppResponss` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("appId") != null && !jsonObj.get("appId").isJsonNull()) && !jsonObj.get("appId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appId").toString()));
      }
      if ((jsonObj.get("code") != null && !jsonObj.get("code").isJsonNull()) && !jsonObj.get("code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("spaceId") != null && !jsonObj.get("spaceId").isJsonNull()) && !jsonObj.get("spaceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `spaceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("spaceId").toString()));
      }
      if ((jsonObj.get("threadId") != null && !jsonObj.get("threadId").isJsonNull()) && !jsonObj.get("threadId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `threadId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("threadId").toString()));
      }
      if ((jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) && !jsonObj.get("createdAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdAt").toString()));
      }
      // validate the optional field `creator`
      if (jsonObj.get("creator") != null && !jsonObj.get("creator").isJsonNull()) {
        GetAppResponssCreator.validateJsonElement(jsonObj.get("creator"));
      }
      if ((jsonObj.get("modifiedAt") != null && !jsonObj.get("modifiedAt").isJsonNull()) && !jsonObj.get("modifiedAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modifiedAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modifiedAt").toString()));
      }
      // validate the optional field `modifier`
      if (jsonObj.get("modifier") != null && !jsonObj.get("modifier").isJsonNull()) {
        GetAppResponssCreator.validateJsonElement(jsonObj.get("modifier"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetAppResponss.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetAppResponss' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetAppResponss> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetAppResponss.class));

       return (TypeAdapter<T>) new TypeAdapter<GetAppResponss>() {
           @Override
           public void write(JsonWriter out, GetAppResponss value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetAppResponss read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetAppResponss given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetAppResponss
   * @throws IOException if the JSON string is invalid with respect to GetAppResponss
   */
  public static GetAppResponss fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetAppResponss.class);
  }

  /**
   * Convert an instance of GetAppResponss to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

