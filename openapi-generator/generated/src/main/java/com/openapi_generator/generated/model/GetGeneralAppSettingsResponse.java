/*
 * Kintone REST API
 * This is an experimental
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.openapi_generator.generated.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.openapi_generator.generated.model.GetGeneralAppSettingsResponseIcon;
import com.openapi_generator.generated.model.GetGeneralAppSettingsResponseNumberPrecision;
import com.openapi_generator.generated.model.GetGeneralAppSettingsResponseTitleField;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.openapi_generator.generated.JSON;

/**
 * Get General App Settings Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-11-29T04:52:36.267360054Z[Etc/UTC]", comments = "Generator version: 7.11.0-SNAPSHOT")
public class GetGeneralAppSettingsResponse {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nullable
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_ICON = "icon";
  @SerializedName(SERIALIZED_NAME_ICON)
  @javax.annotation.Nullable
  private GetGeneralAppSettingsResponseIcon icon;

  public static final String SERIALIZED_NAME_THEME = "theme";
  @SerializedName(SERIALIZED_NAME_THEME)
  @javax.annotation.Nullable
  private String theme;

  public static final String SERIALIZED_NAME_TITLE_FIELD = "titleField";
  @SerializedName(SERIALIZED_NAME_TITLE_FIELD)
  @javax.annotation.Nullable
  private GetGeneralAppSettingsResponseTitleField titleField;

  public static final String SERIALIZED_NAME_ENABLE_THUMBNAILS = "enableThumbnails";
  @SerializedName(SERIALIZED_NAME_ENABLE_THUMBNAILS)
  @javax.annotation.Nullable
  private Boolean enableThumbnails;

  public static final String SERIALIZED_NAME_ENABLE_BULK_DELETION = "enableBulkDeletion";
  @SerializedName(SERIALIZED_NAME_ENABLE_BULK_DELETION)
  @javax.annotation.Nullable
  private Boolean enableBulkDeletion;

  public static final String SERIALIZED_NAME_ENABLE_COMMENTS = "enableComments";
  @SerializedName(SERIALIZED_NAME_ENABLE_COMMENTS)
  @javax.annotation.Nullable
  private Boolean enableComments;

  public static final String SERIALIZED_NAME_ENABLE_DUPLICATE_RECORD = "enableDuplicateRecord";
  @SerializedName(SERIALIZED_NAME_ENABLE_DUPLICATE_RECORD)
  @javax.annotation.Nullable
  private Boolean enableDuplicateRecord;

  public static final String SERIALIZED_NAME_ENABLE_INLINE_RECORD_EDITING = "enableInlineRecordEditing";
  @SerializedName(SERIALIZED_NAME_ENABLE_INLINE_RECORD_EDITING)
  @javax.annotation.Nullable
  private Boolean enableInlineRecordEditing;

  public static final String SERIALIZED_NAME_NUMBER_PRECISION = "numberPrecision";
  @SerializedName(SERIALIZED_NAME_NUMBER_PRECISION)
  @javax.annotation.Nullable
  private GetGeneralAppSettingsResponseNumberPrecision numberPrecision;

  public static final String SERIALIZED_NAME_FIRST_MONTH_OF_FISCAL_YEAR = "firstMonthOfFiscalYear";
  @SerializedName(SERIALIZED_NAME_FIRST_MONTH_OF_FISCAL_YEAR)
  @javax.annotation.Nullable
  private String firstMonthOfFiscalYear;

  public static final String SERIALIZED_NAME_REVISION = "revision";
  @SerializedName(SERIALIZED_NAME_REVISION)
  @javax.annotation.Nullable
  private String revision;

  public GetGeneralAppSettingsResponse() {
  }

  public GetGeneralAppSettingsResponse name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the app.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public GetGeneralAppSettingsResponse description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * The description of the app.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public GetGeneralAppSettingsResponse icon(@javax.annotation.Nullable GetGeneralAppSettingsResponseIcon icon) {
    this.icon = icon;
    return this;
  }

  /**
   * Get icon
   * @return icon
   */
  @javax.annotation.Nullable
  public GetGeneralAppSettingsResponseIcon getIcon() {
    return icon;
  }

  public void setIcon(@javax.annotation.Nullable GetGeneralAppSettingsResponseIcon icon) {
    this.icon = icon;
  }


  public GetGeneralAppSettingsResponse theme(@javax.annotation.Nullable String theme) {
    this.theme = theme;
    return this;
  }

  /**
   * The theme of the app.
   * @return theme
   */
  @javax.annotation.Nullable
  public String getTheme() {
    return theme;
  }

  public void setTheme(@javax.annotation.Nullable String theme) {
    this.theme = theme;
  }


  public GetGeneralAppSettingsResponse titleField(@javax.annotation.Nullable GetGeneralAppSettingsResponseTitleField titleField) {
    this.titleField = titleField;
    return this;
  }

  /**
   * Get titleField
   * @return titleField
   */
  @javax.annotation.Nullable
  public GetGeneralAppSettingsResponseTitleField getTitleField() {
    return titleField;
  }

  public void setTitleField(@javax.annotation.Nullable GetGeneralAppSettingsResponseTitleField titleField) {
    this.titleField = titleField;
  }


  public GetGeneralAppSettingsResponse enableThumbnails(@javax.annotation.Nullable Boolean enableThumbnails) {
    this.enableThumbnails = enableThumbnails;
    return this;
  }

  /**
   * Whether to enable thumbnails.
   * @return enableThumbnails
   */
  @javax.annotation.Nullable
  public Boolean getEnableThumbnails() {
    return enableThumbnails;
  }

  public void setEnableThumbnails(@javax.annotation.Nullable Boolean enableThumbnails) {
    this.enableThumbnails = enableThumbnails;
  }


  public GetGeneralAppSettingsResponse enableBulkDeletion(@javax.annotation.Nullable Boolean enableBulkDeletion) {
    this.enableBulkDeletion = enableBulkDeletion;
    return this;
  }

  /**
   * Whether to enable bulk deletion.
   * @return enableBulkDeletion
   */
  @javax.annotation.Nullable
  public Boolean getEnableBulkDeletion() {
    return enableBulkDeletion;
  }

  public void setEnableBulkDeletion(@javax.annotation.Nullable Boolean enableBulkDeletion) {
    this.enableBulkDeletion = enableBulkDeletion;
  }


  public GetGeneralAppSettingsResponse enableComments(@javax.annotation.Nullable Boolean enableComments) {
    this.enableComments = enableComments;
    return this;
  }

  /**
   * Whether to enable comments.
   * @return enableComments
   */
  @javax.annotation.Nullable
  public Boolean getEnableComments() {
    return enableComments;
  }

  public void setEnableComments(@javax.annotation.Nullable Boolean enableComments) {
    this.enableComments = enableComments;
  }


  public GetGeneralAppSettingsResponse enableDuplicateRecord(@javax.annotation.Nullable Boolean enableDuplicateRecord) {
    this.enableDuplicateRecord = enableDuplicateRecord;
    return this;
  }

  /**
   * Whether to enable duplicate record.
   * @return enableDuplicateRecord
   */
  @javax.annotation.Nullable
  public Boolean getEnableDuplicateRecord() {
    return enableDuplicateRecord;
  }

  public void setEnableDuplicateRecord(@javax.annotation.Nullable Boolean enableDuplicateRecord) {
    this.enableDuplicateRecord = enableDuplicateRecord;
  }


  public GetGeneralAppSettingsResponse enableInlineRecordEditing(@javax.annotation.Nullable Boolean enableInlineRecordEditing) {
    this.enableInlineRecordEditing = enableInlineRecordEditing;
    return this;
  }

  /**
   * Whether to enable inline record editing.
   * @return enableInlineRecordEditing
   */
  @javax.annotation.Nullable
  public Boolean getEnableInlineRecordEditing() {
    return enableInlineRecordEditing;
  }

  public void setEnableInlineRecordEditing(@javax.annotation.Nullable Boolean enableInlineRecordEditing) {
    this.enableInlineRecordEditing = enableInlineRecordEditing;
  }


  public GetGeneralAppSettingsResponse numberPrecision(@javax.annotation.Nullable GetGeneralAppSettingsResponseNumberPrecision numberPrecision) {
    this.numberPrecision = numberPrecision;
    return this;
  }

  /**
   * Get numberPrecision
   * @return numberPrecision
   */
  @javax.annotation.Nullable
  public GetGeneralAppSettingsResponseNumberPrecision getNumberPrecision() {
    return numberPrecision;
  }

  public void setNumberPrecision(@javax.annotation.Nullable GetGeneralAppSettingsResponseNumberPrecision numberPrecision) {
    this.numberPrecision = numberPrecision;
  }


  public GetGeneralAppSettingsResponse firstMonthOfFiscalYear(@javax.annotation.Nullable String firstMonthOfFiscalYear) {
    this.firstMonthOfFiscalYear = firstMonthOfFiscalYear;
    return this;
  }

  /**
   * The first month of the fiscal year.
   * @return firstMonthOfFiscalYear
   */
  @javax.annotation.Nullable
  public String getFirstMonthOfFiscalYear() {
    return firstMonthOfFiscalYear;
  }

  public void setFirstMonthOfFiscalYear(@javax.annotation.Nullable String firstMonthOfFiscalYear) {
    this.firstMonthOfFiscalYear = firstMonthOfFiscalYear;
  }


  public GetGeneralAppSettingsResponse revision(@javax.annotation.Nullable String revision) {
    this.revision = revision;
    return this;
  }

  /**
   * The revision number of the app.
   * @return revision
   */
  @javax.annotation.Nullable
  public String getRevision() {
    return revision;
  }

  public void setRevision(@javax.annotation.Nullable String revision) {
    this.revision = revision;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetGeneralAppSettingsResponse getGeneralAppSettingsResponse = (GetGeneralAppSettingsResponse) o;
    return Objects.equals(this.name, getGeneralAppSettingsResponse.name) &&
        Objects.equals(this.description, getGeneralAppSettingsResponse.description) &&
        Objects.equals(this.icon, getGeneralAppSettingsResponse.icon) &&
        Objects.equals(this.theme, getGeneralAppSettingsResponse.theme) &&
        Objects.equals(this.titleField, getGeneralAppSettingsResponse.titleField) &&
        Objects.equals(this.enableThumbnails, getGeneralAppSettingsResponse.enableThumbnails) &&
        Objects.equals(this.enableBulkDeletion, getGeneralAppSettingsResponse.enableBulkDeletion) &&
        Objects.equals(this.enableComments, getGeneralAppSettingsResponse.enableComments) &&
        Objects.equals(this.enableDuplicateRecord, getGeneralAppSettingsResponse.enableDuplicateRecord) &&
        Objects.equals(this.enableInlineRecordEditing, getGeneralAppSettingsResponse.enableInlineRecordEditing) &&
        Objects.equals(this.numberPrecision, getGeneralAppSettingsResponse.numberPrecision) &&
        Objects.equals(this.firstMonthOfFiscalYear, getGeneralAppSettingsResponse.firstMonthOfFiscalYear) &&
        Objects.equals(this.revision, getGeneralAppSettingsResponse.revision);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, icon, theme, titleField, enableThumbnails, enableBulkDeletion, enableComments, enableDuplicateRecord, enableInlineRecordEditing, numberPrecision, firstMonthOfFiscalYear, revision);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetGeneralAppSettingsResponse {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    theme: ").append(toIndentedString(theme)).append("\n");
    sb.append("    titleField: ").append(toIndentedString(titleField)).append("\n");
    sb.append("    enableThumbnails: ").append(toIndentedString(enableThumbnails)).append("\n");
    sb.append("    enableBulkDeletion: ").append(toIndentedString(enableBulkDeletion)).append("\n");
    sb.append("    enableComments: ").append(toIndentedString(enableComments)).append("\n");
    sb.append("    enableDuplicateRecord: ").append(toIndentedString(enableDuplicateRecord)).append("\n");
    sb.append("    enableInlineRecordEditing: ").append(toIndentedString(enableInlineRecordEditing)).append("\n");
    sb.append("    numberPrecision: ").append(toIndentedString(numberPrecision)).append("\n");
    sb.append("    firstMonthOfFiscalYear: ").append(toIndentedString(firstMonthOfFiscalYear)).append("\n");
    sb.append("    revision: ").append(toIndentedString(revision)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("description");
    openapiFields.add("icon");
    openapiFields.add("theme");
    openapiFields.add("titleField");
    openapiFields.add("enableThumbnails");
    openapiFields.add("enableBulkDeletion");
    openapiFields.add("enableComments");
    openapiFields.add("enableDuplicateRecord");
    openapiFields.add("enableInlineRecordEditing");
    openapiFields.add("numberPrecision");
    openapiFields.add("firstMonthOfFiscalYear");
    openapiFields.add("revision");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetGeneralAppSettingsResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetGeneralAppSettingsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetGeneralAppSettingsResponse is not found in the empty JSON string", GetGeneralAppSettingsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetGeneralAppSettingsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetGeneralAppSettingsResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // validate the optional field `icon`
      if (jsonObj.get("icon") != null && !jsonObj.get("icon").isJsonNull()) {
        GetGeneralAppSettingsResponseIcon.validateJsonElement(jsonObj.get("icon"));
      }
      if ((jsonObj.get("theme") != null && !jsonObj.get("theme").isJsonNull()) && !jsonObj.get("theme").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `theme` to be a primitive type in the JSON string but got `%s`", jsonObj.get("theme").toString()));
      }
      // validate the optional field `titleField`
      if (jsonObj.get("titleField") != null && !jsonObj.get("titleField").isJsonNull()) {
        GetGeneralAppSettingsResponseTitleField.validateJsonElement(jsonObj.get("titleField"));
      }
      // validate the optional field `numberPrecision`
      if (jsonObj.get("numberPrecision") != null && !jsonObj.get("numberPrecision").isJsonNull()) {
        GetGeneralAppSettingsResponseNumberPrecision.validateJsonElement(jsonObj.get("numberPrecision"));
      }
      if ((jsonObj.get("firstMonthOfFiscalYear") != null && !jsonObj.get("firstMonthOfFiscalYear").isJsonNull()) && !jsonObj.get("firstMonthOfFiscalYear").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstMonthOfFiscalYear` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstMonthOfFiscalYear").toString()));
      }
      if ((jsonObj.get("revision") != null && !jsonObj.get("revision").isJsonNull()) && !jsonObj.get("revision").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `revision` to be a primitive type in the JSON string but got `%s`", jsonObj.get("revision").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetGeneralAppSettingsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetGeneralAppSettingsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetGeneralAppSettingsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetGeneralAppSettingsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetGeneralAppSettingsResponse>() {
           @Override
           public void write(JsonWriter out, GetGeneralAppSettingsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetGeneralAppSettingsResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetGeneralAppSettingsResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetGeneralAppSettingsResponse
   * @throws IOException if the JSON string is invalid with respect to GetGeneralAppSettingsResponse
   */
  public static GetGeneralAppSettingsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetGeneralAppSettingsResponse.class);
  }

  /**
   * Convert an instance of GetGeneralAppSettingsResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

