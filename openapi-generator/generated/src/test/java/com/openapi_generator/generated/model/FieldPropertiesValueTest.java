/*
 * Kintone REST API
 * This is an experimental
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.openapi_generator.generated.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.openapi_generator.generated.model.FieldPropertiesValueEntitiesInner;
import com.openapi_generator.generated.model.FieldPropertiesValueLookup;
import com.openapi_generator.generated.model.FieldPropertiesValueOptionsValue;
import com.openapi_generator.generated.model.FieldPropertiesValueReferenceTable;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for FieldPropertiesValue
 */
public class FieldPropertiesValueTest {
    private final FieldPropertiesValue model = new FieldPropertiesValue();

    /**
     * Model tests for FieldPropertiesValue
     */
    @Test
    public void testFieldPropertiesValue() {
        // TODO: test FieldPropertiesValue
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'label'
     */
    @Test
    public void labelTest() {
        // TODO: test label
    }

    /**
     * Test the property 'noLabel'
     */
    @Test
    public void noLabelTest() {
        // TODO: test noLabel
    }

    /**
     * Test the property 'required'
     */
    @Test
    public void requiredTest() {
        // TODO: test required
    }

    /**
     * Test the property 'unique'
     */
    @Test
    public void uniqueTest() {
        // TODO: test unique
    }

    /**
     * Test the property 'maxValue'
     */
    @Test
    public void maxValueTest() {
        // TODO: test maxValue
    }

    /**
     * Test the property 'minValue'
     */
    @Test
    public void minValueTest() {
        // TODO: test minValue
    }

    /**
     * Test the property 'maxLength'
     */
    @Test
    public void maxLengthTest() {
        // TODO: test maxLength
    }

    /**
     * Test the property 'minLength'
     */
    @Test
    public void minLengthTest() {
        // TODO: test minLength
    }

    /**
     * Test the property 'defaultValue'
     */
    @Test
    public void defaultValueTest() {
        // TODO: test defaultValue
    }

    /**
     * Test the property 'defaultNowValue'
     */
    @Test
    public void defaultNowValueTest() {
        // TODO: test defaultNowValue
    }

    /**
     * Test the property 'align'
     */
    @Test
    public void alignTest() {
        // TODO: test align
    }

    /**
     * Test the property 'expression'
     */
    @Test
    public void expressionTest() {
        // TODO: test expression
    }

    /**
     * Test the property 'hideExpression'
     */
    @Test
    public void hideExpressionTest() {
        // TODO: test hideExpression
    }

    /**
     * Test the property 'digit'
     */
    @Test
    public void digitTest() {
        // TODO: test digit
    }

    /**
     * Test the property 'thumbnailSize'
     */
    @Test
    public void thumbnailSizeTest() {
        // TODO: test thumbnailSize
    }

    /**
     * Test the property 'protocol'
     */
    @Test
    public void protocolTest() {
        // TODO: test protocol
    }

    /**
     * Test the property 'format'
     */
    @Test
    public void formatTest() {
        // TODO: test format
    }

    /**
     * Test the property 'displayScale'
     */
    @Test
    public void displayScaleTest() {
        // TODO: test displayScale
    }

    /**
     * Test the property 'unit'
     */
    @Test
    public void unitTest() {
        // TODO: test unit
    }

    /**
     * Test the property 'unitPosition'
     */
    @Test
    public void unitPositionTest() {
        // TODO: test unitPosition
    }

    /**
     * Test the property 'entities'
     */
    @Test
    public void entitiesTest() {
        // TODO: test entities
    }

    /**
     * Test the property 'referenceTable'
     */
    @Test
    public void referenceTableTest() {
        // TODO: test referenceTable
    }

    /**
     * Test the property 'lookup'
     */
    @Test
    public void lookupTest() {
        // TODO: test lookup
    }

    /**
     * Test the property 'openGroup'
     */
    @Test
    public void openGroupTest() {
        // TODO: test openGroup
    }

    /**
     * Test the property 'fields'
     */
    @Test
    public void fieldsTest() {
        // TODO: test fields
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'options'
     */
    @Test
    public void optionsTest() {
        // TODO: test options
    }

}
