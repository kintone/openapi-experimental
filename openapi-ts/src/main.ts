import { AppService } from "./generated/index";
import { Client, createClient, createConfig } from "@hey-api/client-fetch";

const createAppScenarios = async (client: Client) => {
  // アプリ作成
  const appResp = await AppService.addApp({
    client: client,
    body: { name: "generated by openapi-ts" },
  });
  const app = appResp.data?.app;
  console.log(app);

  // デプロイ
  await AppService.deployApp({
    client: client,
    body: {
      apps: [
        {
          app: app,
        },
      ],
    },
  });

  // デプロイ確認
  deploy_check: while (true) {
    const deployStatusResp = await AppService.getAppDeployStatus({
      client: client,
      query: {
        apps: [app!],
      },
    });

    for (const status of deployStatusResp.data?.apps ?? []) {
      if (status.app === app && status.status !== "PROCESSING") {
        console.log("deployed!");
        break deploy_check;
      }
    }

    console.log("deploying...");
    await new Promise((resolve) => setTimeout(resolve, 500));
  }

  const getAppSetting = await AppService.getGeneralAppSettings({
    client: client,
    query: { app: app!, lang: "ja" },
  });
  console.log(getAppSetting.data);
};

const main = async () => {
  const client = createClient(
    createConfig({
      baseUrl: "http://localhost",
      headers: {
        "X-Cybozu-Authorization": "QWRtaW5pc3RyYXRvcjpjeWJvenU=",
        "User-Agent": "hello-openapi-ts",
      },
      throwOnError: true,
    }),
  );

  createAppScenarios(client);
};

main();
