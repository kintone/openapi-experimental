// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options, formDataBodySerializer } from '@hey-api/client-fetch';
import type { GetApisError, GetApisResponse, GetApiData, GetApiError, GetApiResponse, GetAppData, GetAppError, GetAppResponse, AddAppData, AddAppError, AddAppResponse2, GetGeneralAppSettingsData, GetGeneralAppSettingsError, GetGeneralAppSettingsResponse2, GetAppDeployStatusData, GetAppDeployStatusError, GetAppDeployStatusResponse2, DeployAppData, DeployAppError, DeployAppResponse, GetAdminNotesData, GetAdminNotesError, GetAdminNotesResponse, GetAdminNotesGuestData, GetAdminNotesGuestError, GetAdminNotesGuestResponse, GetAdminNotesPreviewData, GetAdminNotesPreviewError, GetAdminNotesPreviewResponse, UpdateAdminNotesData, UpdateAdminNotesError, UpdateAdminNotesResponse, GetAdminNotesGuestPreviewData, GetAdminNotesGuestPreviewError, GetAdminNotesGuestPreviewResponse, UpdateAdminNotesPreviewData, UpdateAdminNotesPreviewError, UpdateAdminNotesPreviewResponse, GetAppFormFieldsJsonData, GetAppFormFieldsJsonError, GetAppFormFieldsJsonResponse, DownloadFileData, DownloadFileError, DownloadFileResponse, UploadFileData, UploadFileError, UploadFileResponse2 } from './types.gen';

export const client = createClient(createConfig());

export class ApisService {
    /**
     * REST APIの一覧を取得する。
     */
    public static getApis<ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) {
        return (options?.client ?? client).get<GetApisResponse, GetApisError, ThrowOnError>({
            ...options,
            url: '/k/v1/apis.json'
        });
    }
    
    /**
     * REST APIの一覧を取得する。
     */
    public static getApi<ThrowOnError extends boolean = false>(options: Options<GetApiData, ThrowOnError>) {
        return (options?.client ?? client).get<GetApiResponse, GetApiError, ThrowOnError>({
            ...options,
            url: '/k/v1/apis/{apiId}.json'
        });
    }
    
}

export class AppService {
    /**
     * 1件のアプリの情報を取得する。
     */
    public static getApp<ThrowOnError extends boolean = false>(options?: Options<GetAppData, ThrowOnError>) {
        return (options?.client ?? client).post<GetAppResponse, GetAppError, ThrowOnError>({
            ...options,
            url: '/k/v1/app.json'
        });
    }
    
    /**
     * 動作テスト環境にアプリを作成する。
     */
    public static addApp<ThrowOnError extends boolean = false>(options: Options<AddAppData, ThrowOnError>) {
        return (options?.client ?? client).post<AddAppResponse2, AddAppError, ThrowOnError>({
            ...options,
            url: '/k/v1/preview/app.json'
        });
    }
    
    /**
     * Get general app settings
     * Retrieves the general settings of an app in Kintone.
     */
    public static getGeneralAppSettings<ThrowOnError extends boolean = false>(options: Options<GetGeneralAppSettingsData, ThrowOnError>) {
        return (options?.client ?? client).get<GetGeneralAppSettingsResponse2, GetGeneralAppSettingsError, ThrowOnError>({
            ...options,
            url: '/k/v1/app/settings.json'
        });
    }
    
    /**
     * Get app deploy status
     * Retrieves the deployment status of an app in Kintone.
     */
    public static getAppDeployStatus<ThrowOnError extends boolean = false>(options: Options<GetAppDeployStatusData, ThrowOnError>) {
        return (options?.client ?? client).get<GetAppDeployStatusResponse2, GetAppDeployStatusError, ThrowOnError>({
            ...options,
            url: '/k/v1/preview/app/deploy.json'
        });
    }
    
    /**
     * Deploy App Settings
     * Deploys the settings of an app.
     */
    public static deployApp<ThrowOnError extends boolean = false>(options: Options<DeployAppData, ThrowOnError>) {
        return (options?.client ?? client).post<DeployAppResponse, DeployAppError, ThrowOnError>({
            ...options,
            url: '/k/v1/preview/app/deploy.json'
        });
    }
    
    /**
     * Get App Admin Notes
     * Gets notes for app administrators and their settings.
     */
    public static getAdminNotes<ThrowOnError extends boolean = false>(options?: Options<GetAdminNotesData, ThrowOnError>) {
        return (options?.client ?? client).get<GetAdminNotesResponse, GetAdminNotesError, ThrowOnError>({
            ...options,
            url: '/k/v1/app/adminNotes.json'
        });
    }
    
    public static getAdminNotesGuest<ThrowOnError extends boolean = false>(options: Options<GetAdminNotesGuestData, ThrowOnError>) {
        return (options?.client ?? client).get<GetAdminNotesGuestResponse, GetAdminNotesGuestError, ThrowOnError>({
            ...options,
            url: '/guest/{SpaceID}/k/v1/app/adminNotes.json'
        });
    }
    
    /**
     * Get App Admin Notes
     * Gets notes for app administrators and their settings.
     */
    public static getAdminNotesPreview<ThrowOnError extends boolean = false>(options?: Options<GetAdminNotesPreviewData, ThrowOnError>) {
        return (options?.client ?? client).get<GetAdminNotesPreviewResponse, GetAdminNotesPreviewError, ThrowOnError>({
            ...options,
            url: '/k/v1/preview/app/adminNotes.json'
        });
    }
    
    /**
     * Update App Admin Notes
     * Update notes for app administrators and their settings.
     */
    public static updateAdminNotes<ThrowOnError extends boolean = false>(options: Options<UpdateAdminNotesData, ThrowOnError>) {
        return (options?.client ?? client).put<UpdateAdminNotesResponse, UpdateAdminNotesError, ThrowOnError>({
            ...options,
            url: '/k/v1/preview/app/adminNotes.json'
        });
    }
    
    public static getAdminNotesGuestPreview<ThrowOnError extends boolean = false>(options: Options<GetAdminNotesGuestPreviewData, ThrowOnError>) {
        return (options?.client ?? client).get<GetAdminNotesGuestPreviewResponse, GetAdminNotesGuestPreviewError, ThrowOnError>({
            ...options,
            url: '/guest/{SpaceID}/k/v1/preview/app/adminNotes.json'
        });
    }
    
    /**
     * Update App Admin Notes For Preview
     * Update notes for preview app administrators and their settings.
     */
    public static updateAdminNotesPreview<ThrowOnError extends boolean = false>(options: Options<UpdateAdminNotesPreviewData, ThrowOnError>) {
        return (options?.client ?? client).put<UpdateAdminNotesPreviewResponse, UpdateAdminNotesPreviewError, ThrowOnError>({
            ...options,
            url: '/guest/{SpaceID}/k/v1/preview/app/adminNotes.json'
        });
    }
    
}

export class DefaultService {
    /**
     * Get Form Fields
     * Retrieve the form fields of an app in Kintone
     */
    public static getAppFormFieldsJson<ThrowOnError extends boolean = false>(options: Options<GetAppFormFieldsJsonData, ThrowOnError>) {
        return (options?.client ?? client).get<GetAppFormFieldsJsonResponse, GetAppFormFieldsJsonError, ThrowOnError>({
            ...options,
            url: '/app/form/fields.json'
        });
    }
    
}

export class FileService {
    /**
     * Download a file
     * Downloads a file from Kintone.
     */
    public static downloadFile<ThrowOnError extends boolean = false>(options: Options<DownloadFileData, ThrowOnError>) {
        return (options?.client ?? client).get<DownloadFileResponse, DownloadFileError, ThrowOnError>({
            ...options,
            url: '/k/v1/file.json'
        });
    }
    
    /**
     * Upload a file
     * Uploads a file to Kintone.
     */
    public static uploadFile<ThrowOnError extends boolean = false>(options: Options<UploadFileData, ThrowOnError>) {
        return (options?.client ?? client).post<UploadFileResponse2, UploadFileError, ThrowOnError>({
            ...options,
            ...formDataBodySerializer,
            headers: {
                'Content-Type': null,
                ...options?.headers
            },
            url: '/k/v1/file.json'
        });
    }
    
}